name: Release and Publish

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true
        type: string
      publish_java:
        description: 'Publish Java artifacts to Maven Central'
        required: true
        type: boolean
        default: true
      publish_dart:
        description: 'Publish Dart package to pub.dev'
        required: true
        type: boolean
        default: true
      create_github_release:
        description: 'Create GitHub release'
        required: true
        type: boolean
        default: true

jobs:
  validate-version:
    name: Validate Version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.validate.outputs.version }}
      version_tag: ${{ steps.validate.outputs.version_tag }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Validate version format
      id: validate
      run: |
        VERSION="${{ github.event.inputs.version }}"
        
        # Validate semantic version format
        if ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
          echo "Error: Version must be in semantic version format (e.g., 1.2.3 or 1.2.3-beta1)"
          exit 1
        fi
        
        # Check if tag already exists
        if git rev-parse "v$VERSION" >/dev/null 2>&1; then
          echo "Error: Version v$VERSION already exists as a tag"
          exit 1
        fi
        
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "version_tag=v$VERSION" >> $GITHUB_OUTPUT
        echo "âœ“ Version $VERSION is valid and available"

  build-and-test:
    name: Build and Test
    needs: validate-version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
    
    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Build and test Java
      working-directory: clients/java
      run: |
        chmod +x gradlew
        # Copy schemas to resources
        mkdir -p cldf-java/src/main/resources
        rm -rf cldf-java/src/main/resources/schemas
        cp -r ../../schemas cldf-java/src/main/resources/
        
        # Update version in build.gradle files
        sed -i "s/version = '[0-9.]*'/version = '${{ needs.validate-version.outputs.version }}'/" build.gradle
        sed -i "s/version = '[0-9.]*'/version = '${{ needs.validate-version.outputs.version }}'/" cldf-java/build.gradle
        sed -i "s/version = '[0-9.]*'/version = '${{ needs.validate-version.outputs.version }}'/" cldf-tool/build.gradle
        
        ./gradlew clean build
    
    - name: Build and test Dart
      working-directory: clients/dart/cldf
      run: |
        # Update version in pubspec.yaml
        sed -i "s/^version: .*/version: ${{ needs.validate-version.outputs.version }}/" pubspec.yaml
        
        dart pub get
        dart run build_runner build --delete-conflicting-outputs
        dart format --output=none --set-exit-if-changed .
        dart analyze
        dart test
    
    - name: Upload Java artifacts
      uses: actions/upload-artifact@v4
      with:
        name: java-artifacts
        path: |
          clients/java/cldf-java/build/libs/*.jar
          clients/java/cldf-tool/build/distributions/*.tar
          clients/java/cldf-tool/build/distributions/*.zip
        retention-days: 7
    
    - name: Upload Dart build
      uses: actions/upload-artifact@v4
      with:
        name: dart-package
        path: clients/dart/cldf/
        retention-days: 7

  publish-java:
    name: Publish Java to Maven Central
    needs: [validate-version, build-and-test]
    if: github.event.inputs.publish_java == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
    
    - name: Update version
      working-directory: clients/java
      run: |
        sed -i "s/version = '[0-9.]*'/version = '${{ needs.validate-version.outputs.version }}'/" build.gradle
        sed -i "s/version = '[0-9.]*'/version = '${{ needs.validate-version.outputs.version }}'/" cldf-java/build.gradle
        sed -i "s/version = '[0-9.]*'/version = '${{ needs.validate-version.outputs.version }}'/" cldf-tool/build.gradle
    
    - name: Copy schemas
      working-directory: clients/java
      run: |
        mkdir -p cldf-java/src/main/resources
        rm -rf cldf-java/src/main/resources/schemas
        cp -r ../../schemas cldf-java/src/main/resources/
    
    - name: Publish to Maven Central
      working-directory: clients/java
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      run: |
        chmod +x gradlew
        ./gradlew publishToSonatype closeAndReleaseSonatypeStagingRepository

  publish-dart:
    name: Publish Dart to pub.dev
    needs: [validate-version, build-and-test]
    if: github.event.inputs.publish_dart == 'true'
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for pub.dev authentication
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        sdk: stable
    
    - name: Update version
      working-directory: clients/dart/cldf
      run: |
        sed -i "s/^version: .*/version: ${{ needs.validate-version.outputs.version }}/" pubspec.yaml
    
    - name: Install dependencies
      working-directory: clients/dart/cldf
      run: |
        dart pub get
        dart run build_runner build --delete-conflicting-outputs
    
    - name: Publish to pub.dev
      working-directory: clients/dart/cldf
      run: |
        dart pub publish --force

  create-release:
    name: Create GitHub Release
    needs: [validate-version, build-and-test, publish-java, publish-dart]
    if: |
      always() &&
      needs.build-and-test.result == 'success' &&
      github.event.inputs.create_github_release == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download Java artifacts
      uses: actions/download-artifact@v4
      with:
        name: java-artifacts
        path: ./release-artifacts/java
    
    - name: Create version tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag -a "${{ needs.validate-version.outputs.version_tag }}" -m "Release ${{ needs.validate-version.outputs.version }}"
        git push origin "${{ needs.validate-version.outputs.version_tag }}"
    
    - name: Generate release notes
      id: release_notes
      run: |
        VERSION="${{ needs.validate-version.outputs.version }}"
        cat << EOF > release_notes.md
        # CLDF Release ${VERSION}
        
        ## ðŸ“¦ Packages Published
        
        ### Java
        - Maven Central: \`io.cldf:cldf-java:${VERSION}\`
        - CLI Tool: Available in release artifacts
        
        ### Dart
        - pub.dev: \`cldf:${VERSION}\`
        
        ## ðŸš€ What's New
        
        See [CHANGELOG](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for detailed changes.
        
        ## ðŸ“¥ Downloads
        
        ### Java CLI Tool
        - Download the CLI tool from the artifacts below
        - Extract and run: \`./bin/cldf --help\`
        
        ### Java Library
        \`\`\`gradle
        implementation 'io.cldf:cldf-java:${VERSION}'
        \`\`\`
        
        ### Dart Package
        \`\`\`yaml
        dependencies:
          cldf: ^${VERSION}
        \`\`\`
        
        ## ðŸ“š Documentation
        
        - [Java Documentation](https://github.com/${{ github.repository }}/tree/main/clients/java)
        - [Dart Documentation](https://github.com/${{ github.repository }}/tree/main/clients/dart)
        - [Schema Documentation](https://github.com/${{ github.repository }}/tree/main/schemas)
        EOF
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.validate-version.outputs.version_tag }}
        name: CLDF ${{ needs.validate-version.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(needs.validate-version.outputs.version, '-') }}
        files: |
          ./release-artifacts/java/cldf-tool/build/distributions/*.tar
          ./release-artifacts/java/cldf-tool/build/distributions/*.zip
          ./release-artifacts/java/cldf-java/build/libs/*.jar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}