name: Publish Java to GitHub Packages

on:
  push:
    tags:
      - 'java-v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  build:
    name: Build Java Artifacts
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: clients/java
    outputs:
      version: ${{ steps.version.outputs.version }}
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Copy schemas to resources
      run: |
        mkdir -p cldf-java/src/main/resources
        rm -rf cldf-java/src/main/resources/schemas
        cp -r ../../schemas cldf-java/src/main/resources/
      shell: bash
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash
      
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Determine version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "push" ]]; then
          VERSION=${GITHUB_REF#refs/tags/java-v}
        else
          VERSION=${{ github.event.inputs.version }}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Update version in build.gradle.kts
      run: |
        sed -i "s/version = \".*\"/version = \"${{ steps.version.outputs.version }}\"/" build.gradle.kts
        
    - name: Build all modules
      run: ./gradlew clean build javadocJar sourcesJar
      
    - name: Upload cldf-java artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cldf-java-artifacts
        path: |
          clients/java/cldf-java/build/libs/*.jar
          clients/java/cldf-java/build/publications/maven/*.pom
          
    - name: Upload cldf-tool artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cldf-tool-artifacts
        path: |
          clients/java/cldf-tool/build/libs/*.jar

  publish-packages:
    name: Publish to GitHub Packages
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: clients/java
    permissions:
      contents: read
      packages: write
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Copy schemas to resources
      run: |
        mkdir -p cldf-java/src/main/resources
        rm -rf cldf-java/src/main/resources/schemas
        cp -r ../../schemas cldf-java/src/main/resources/
      shell: bash
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      shell: bash
      
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: cldf-java-artifacts
        path: clients/java/cldf-java/build/libs/
        
    - name: Cache Gradle packages (restore only)
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Update version
      run: |
        sed -i "s/version = \".*\"/version = \"${{ needs.build.outputs.version }}\"/" build.gradle.kts
        
    - name: Publish cldf-java to GitHub Packages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Only publish the library module, not the CLI tool
        ./gradlew :cldf-java:publishMavenPublicationToGitHubPackagesRepository --no-build-cache

  create-release:
    name: Create GitHub Release
    needs: [build, publish-packages]
    runs-on: ubuntu-latest
    if: github.event_name == 'push'  # Only for tag pushes
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Generate Release Notes
      run: |
        VERSION=${{ needs.build.outputs.version }}
        cat > release-notes.md << EOF
        # CLDF Java Client v${VERSION}
        
        ## 📦 GitHub Packages
        
        Add to your \`build.gradle.kts\`:
        \`\`\`kotlin
        repositories {
            maven {
                url = uri("https://maven.pkg.github.com/petrmac/crushlog-data-format-spec")
                credentials {
                    username = project.findProperty("gpr.user") as String?
                    password = project.findProperty("gpr.token") as String?
                }
            }
        }
        
        dependencies {
            implementation("app.crushlog:cldf-java:${VERSION}")
        }
        \`\`\`
        
        ## 🔧 CLI Tool
        
        Download \`cldf-tool-${VERSION}.jar\` from the release assets and run:
        \`\`\`bash
        java -jar cldf-tool-${VERSION}.jar
        \`\`\`
        
        ## 📝 What's Changed
        See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/clients/java/CHANGELOG.md) for details.
        
        ---
        *Note: This release uses GitHub Packages. Maven Central publishing will be available in future releases.*
        EOF
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: java-v${{ needs.build.outputs.version }}
        name: CLDF Java v${{ needs.build.outputs.version }}
        body_path: release-notes.md
        draft: false
        prerelease: false
        files: |
          artifacts/cldf-java-artifacts/*.jar
          artifacts/cldf-tool-artifacts/*.jar