name: MCP Server CI

on:
  push:
    branches: [ main, dev ]
    paths:
      - 'mcp-server/**'
      - '.github/workflows/mcp-server-ci.yml'
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'mcp-server/**'
      - '.github/workflows/mcp-server-ci.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./mcp-server

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: mcp-server/package-lock.json

    - name: Install dependencies
      run: npm install

    - name: Lint
      run: npm run lint

    - name: Run unit tests
      run: npm run test:cov

    - name: Run e2e tests
      run: npm run test:e2e

    - name: Build
      run: npm run build

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: always()
      with:
        file: ./mcp-server/coverage/lcov.info
        flags: mcp-server
        name: mcp-server-coverage

  build-and-test-integration:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [18, 20]
    
    defaults:
      run:
        working-directory: ./mcp-server

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'
        cache-dependency-path: mcp-server/package-lock.json

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    - name: Test build artifact exists
      run: |
        if [ -f "dist/src/main.js" ]; then
          echo "✓ Build artifact found: dist/src/main.js"
          echo "Build successful!"
        else
          echo "✗ Build artifact not found: dist/src/main.js"
          echo "Checking dist directory contents:"
          ls -la dist/ || echo "dist directory not found"
          exit 1
        fi
      shell: bash