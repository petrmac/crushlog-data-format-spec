plugins {
    id 'java-library'
    id 'groovy'
    id 'maven-publish'
    id 'signing'
    id 'com.diffplug.spotless' version '6.25.0'
}

// Group and version inherited from root project
description = 'Java client library for CrushLog Data Format (CLDF)'

java {
    // Source/target compatibility inherited from root project
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'
    
    // JSON Schema Validation
    implementation 'com.networknt:json-schema-validator:1.3.3'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    
    // Archive handling
    implementation 'org.apache.commons:commons-compress:1.26.1'
    
    // Spock Testing
    testImplementation 'org.spockframework:spock-core:2.4-M1-groovy-4.0'
    testImplementation 'org.apache.groovy:groovy:4.0.21'
    testImplementation 'org.mockito:mockito-core:5.11.0'
    
    // For Spock with Lombok
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:deprecation"
    options.encoding = 'UTF-8'
}

javadoc {
    options.addStringOption('Xdoclint:all', '-quiet')
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

test {
    useJUnitPlatform()
}


publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            
            pom {
                name = 'CLDF Java Client'
                description = 'Java client library for CrushLog Data Format (CLDF)'
                url = 'https://github.com/cldf/cldf-java'
                
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                
                developers {
                    developer {
                        name = 'CLDF Team'
                        email = 'info@crushlog.app'
                        organization = 'CLDF'
                        organizationUrl = 'https://cldf.io'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/cldf/cldf-java.git'
                    developerConnection = 'scm:git:ssh://github.com:cldf/cldf-java.git'
                    url = 'https://github.com/cldf/cldf-java'
                }
            }
        }
    }
}

signing {
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications.maven
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        googleJavaFormat('1.22.0')
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
        importOrder('java', 'javax', '', '\\#')
    }
    groovy {
        target 'src/*/groovy/**/*.groovy'
        greclipse()
        trimTrailingWhitespace()
        endWithNewline()
    }
}